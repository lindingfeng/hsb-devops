#!/usr/bin/env node
'use strict';

const { version } = require('../package.json')
const program = require('commander');
const applyOrder = require('../lib/module/applyOrder');
const { compressTinify } = require('../lib/module/compress');
const { uploadFiles, batchUploadFiles } = require('../lib/upload');
const createTask = require('../lib/module/createTask');
const { run } = require('../index.js')

program
  .version(version)
  // .option('-u, --user', 'AMC账号')
  // .option('-p, --password', 'AMC密码')
  // .option('-k, --key', '后台配置的密钥key')
  // .option('-d, --dir', 'CDN目录')

program
  .command('devops-new')
  .description('devops-new发版命令')
  .option('-k, --key [key]', '后台配置的key')
  .action(({ key }) => {
    key && createTask(key)
  })

program
  .command('devops-prod')
  .description('devops-prod发版命令')
  .option('-k, --key [key]', '后台配置的key')
  .action(({ key }) => {
    key && applyOrder(key)
  })

program
  .command('compressTinify')
  .description('tinypng无损压缩命令')
  .option('-k, --key [key]', '后台配置的密钥key')
  .action(({ key }) => {
    key && compressTinify(key)
  })

program
  .command('upload')
  .description('文件上传CDN命令')
  .option('-d, --dir [dir]', 'CDN目录')
  .action(({ dir }) => {
    if (dir) {
      return batchUploadFiles(`/${dir}`)
    }
    uploadFiles()
  })

program
  .command('init')
  .description('初始化命令')
  .option('-u, --user [user]', 'AMC账号')
  .option('-p, --password [password]', 'AMC密码')
  .option('-k, --key [key]', '后台配置的密钥key')
  .action(({ user, password, key }) => {
    run && run(user, password, key)
  })

program
  .parse(process.argv);